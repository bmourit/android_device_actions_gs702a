.TH "Makebootfat Bootable FAT Disk Creation" 1
.SH NAME
makebootfat \(hy Makebootfat Bootable FAT Disk Creation
.SH SYNOPSIS 
makebootfat [options] IMAGE
.PD 0
.PP
.PD
.SH DESCRIPTION 
This utility creates a bootable FAT filesystem and
populates it with files and boot tools.
.PP
It is mainly designed to create bootable USB and
Fixed disk for the AdvanceCD project.
.PP
The official site of AdvanceCD and makebootfat is:
.PP
.RS 4
http://advancemame.sourceforge.net/
.PD 0
.PP
.PD
.RE
.SH OPTIONS 
.TP
.B \(hyo, \(hy\(hyoutput DEVICE
Specify the output device. It must be the device
where you want to setup the filesystem.
You can use the special \(a"usb\(a" value to automatically
select the USB Mass Storage device connected at
the system.
This option is always required.
.TP
.B \(hyb, \(hy\(hyboot FILE
.TP
.B \(hy1, \(hy\(hyboot\(hyfat12 FILE
.TP
.B \(hy2, \(hy\(hyboot\(hyfat16 FILE
.TP
.B \(hy3, \(hy\(hyboot\(hyfat32 FILE
Specify the FAT boot sector images to use. The \(hyb option
uses the same sector for all the FAT types. The other
options can be used to specify a different sector for
different FAT types. The FAT types for which a boot sector
is not specified are not used.
This option is always required.
.TP
.B \(hym, \(hy\(hymbr FILE
Specify the MBR sector image to use.
If this option is specified a partition table is
created on the disk. Otherwise the disk is filled without a
partition table like a floppy disk.
.TP
.B \(hyF, \(hy\(hymbrfat
Change the MBR image specified with the \(hym option to pretend
to be a FAT filesystem starting from the first sector of
the disk. This allows booting from USB\(hyFDD (Floppy Disk Drive)
also using a partition table generally required by USB\(hyHDD
(Hard Disk Drive).
The MBR image specified with the \(hym option must have
executable code positioned like a FAT boot sector. You
can use the included \(oqmbrfat.bin\(cq file.
.TP
.B \(hyc, \(hy\(hycopy FILE
Copy the specified file in the root directory of the disk.
The file is copied using the readonly attribute.
.TP
.B \(hyx, \(hy\(hyexclude FILE
Exclude the specified files and subdirectories in the
IMAGE directory to copy. The path must be specified using
the same format used in the IMAGE directory specification.
.TP
.B \(hyX, \(hy\(hysyslinux2
Enforce the syslinux 2.xx FAT limitations. Syslinux
2.xx doesn\(cqt support FAT32 at all, and FAT16 with
64 and 128 sectors per cluster formats.
This option excludes all the FAT formats not supported
by syslinux. Please note that it limits the maximum
size of filesystem to 1 GB.
.TP
.B \(hyY, \(hy\(hysyslinux3
Enforce the syslinux 3.xx FAT support. Syslinux 3.00
supports all the FAT types and sizes but it requires
a special customisation of the boot sector and of
the file \(oqldlinux.sys\(cq.
This option does this customisation without the need
to use the syslinux installer if the \(oqldlinux.sys\(cq
file is copied on disk with the \(hyc option.
.TP
.B \(hyZ, \(hy\(hyzip
If possible force the ZIP\(hyDisk compatibility. It sets
a geometry of 32 sectors and 64 heads. It also uses the
4\(cqth partition entry in the partition table.
It\(cqs required to boot also in USB\(hyZIP mode.
.TP
.B \(hyP, \(hy\(hypartition
Ensure to operate on a partition and not on a disk.
.TP
.B \(hyD, \(hy\(hydisk
Ensure to operate on a disk and not on a partition.
.TP
.B \(hyL, \(hy\(hylabel LABEL
Set the FAT label. The label is a string of 11 chars.
.TP
.B \(hyO, \(hy\(hyoem OEM
Set the FAT OEM name. The OEM name is a string of 11 chars.
.TP
.B \(hyS, \(hy\(hyserial SERIAL
Set the FAT serial number. The serial number is a 32 bit
unsigned integer.
.TP
.B \(hyE, \(hy\(hydrive DRIVE
Set the BIOS drive to setup in the FAT boot sector.
Generally this value is ignored by boot sectors, with
the exception of the FAT12 and FAT16 FreeDOS boot sectors
that require the correct value or the value 255 to force
auto detection.
.TP
.B \(hyv, \(hy\(hyverbose
Print some information on the device and on the filesystem
created.
.TP
.B \(hyi, \(hy\(hyinteractive
Show the errors in a message box. Only for Windows.
.TP
.B \(hyh, \(hy\(hyhelp
Print a short help.
.TP
.B \(hyV, \(hy\(hyversion
Print the version number.
.TP
.B IMAGE
Directory image to copy on the disk. All the files
and subdirectories present in this directory
are copied on the disk.
.SH DISKS AND PARTITIONS NAMES 
In Linux disk devices are named /dev/hdX or /dev/sdX where X
is a letter. Partition devices are named /dev/hdXN or /dev/sdXN
where X is a letter and N a digit.
.PP
In Windows disk devices are named \(rs\(rs.\(rsPhysicalDriveN where N is
a digit. Partition devices are named \(rs\(rs.\(rsX: where X is a letter,
but sometimes \(rs\(rs.\(rsX: is a disk and not a partition, for example on
floppies and on all the USB Mass Storage devices without a
partition table.
.SH SYSLINUX 
To make a bootable FAT using syslinux you must use
the \(hyX option for syslinux version 2.xx or the \(hyY
option for syslinux version 3.xx. You must also copy in
the root directory of the disk the files:
.RS 0
.PD 0
.HP 4
.I ldlinux.sys
The syslinux loader.
.HP 4
.I syslinux.cfg
The syslinux configuration file.
.HP 4
.I linux
The Linux kernel image  (the file name may be different).
.HP 4
.I initrd.img
The initrd filesystem (the file name may be different
or missing).
.PD
.RE
.PP
You must also specify the \(oqldlinux.bss\(cq boot sector with the \(hyb
option and possibily the \(oqmbr.bin\(cq MBR sector with the \(hym option.
Both the sector images are present in the syslinux package.
.PP
For example:
.PP
.RS 4
makebootfat \(hyo usb \(rs
.PD 0
.PP
.PD
	\(hyY \(rs
.PD 0
.PP
.PD
	\(hyb ldlinux.bss \(hym mbr.bin \(rs
.PD 0
.PP
.PD
	\(hyc ldlinux.sys \(hyc syslinux.cfg \(rs
.PD 0
.PP
.PD
	\(hyc linux \(hyc initrd.img \(rs
.PD 0
.PP
.PD
	image
.PD 0
.PP
.PD
.RE
.SH LOADLIN AND FREEDOS 
To make a bootable FAT using loadlin and FreeDOS you must copy
in the root directory of the disk the files:
.RS 0
.PD 0
.HP 4
.I kernel.sys
The FreeDOS kernel. Remember to use the \(a"32\(a" kernel
version to support FAT32.
.HP 4
.I command.com
The FreeDOS shell.
.HP 4
.I autoexec.bat
Used to start loadlin.
.HP 4
.I loadlin.exe
The loadlin executable.
.HP 4
.I linux
The Linux kernel image  (the file name may be different).
.HP 4
.I initrd.img
The initrd filesystem (the file name may be different
or missing).
.PD
.RE
.PP
You must also specify the FreeDOS boot sectors available on the
FreeDOS \(oqsys\(cq source package with the \(hy1, \(hy2, \(hy3 option.
For the MBR you can use the sectors image available on the FreeDOS
\(oqfdisk\(cq source package.
.PP
For example:
.PP
.RS 4
makebootfat \(hyo /dev/hda1 \(rs
.PD 0
.PP
.PD
	\(hyE 255 \(rs
.PD 0
.PP
.PD
	\(hy1 fat12com.bin \(hy2 fat16com.bin \(hy3 fat32lba.bin \(rs
.PD 0
.PP
.PD
	\(hyc kernel.sys \(hyc command.com \(rs
.PD 0
.PP
.PD
	\(hyc autoexec.bat \(hyc loadlin.exe \(rs
.PD 0
.PP
.PD
	\(hyc linux \(hyc initrd.img \(rs
.PD 0
.PP
.PD
	image
.PD 0
.PP
.PD
.RE
.SH MULTI STANDARD USB BOOTING 
The BIOS USB boot support is generally differentiated in three
categories: USB\(hyHDD, USB\(hyFDD and USB\(hyZIP.
.PP
The USB\(hyHDD (Hard Disk Drive) standard is the preferred choice and
it requires the presence of a partition table in the first sector
of the disk. You can create this type of disk using the \(hym option.
.PP
The USB\(hyFDD (Floppy Disk Drive) standard requires the presence of
a filesystem starting from the first sector of the disk without
a partition table.
You can create this type of disk without using the \(hym option.
.PP
The USB\(hyZIP (ZIP Drive) standard requires the presence of a
device with a very specific geometry. Specifically, it requires
a geometry with 32 sectors and 64 heads. It also requires the presence
of a partition table with only a bootable partition in the
fourth entry. You can create this type of disk using the \(hym and \(hyZ option.
.PP
Generally these standards are incompatible, but using the \(hym, \(hyF
and \(hyZ options you can create a disk compatible with all of them.
.PP
To use the \(hyF option, the MBR image specified must follow
the constrains:
.PD 0
.IP \(bu
It must start with a standard FAT 3 bytes jump instruction.
.IP \(bu
It must have the bytes from address 3 to 89 (included) unused.
.PD
.PP
And example of such image is in the \(oqmbrfat.bin\(cq file.
.PP
For example to create a syslinux image:
.PP
.RS 4
makebootfat \(hyo usb \(rs
.PD 0
.PP
.PD
	\(hyY \(rs
.PD 0
.PP
.PD
	\(hyZ \(rs
.PD 0
.PP
.PD
	\(hyb ldlinux.bss \(hym mbrfat.bin \(hyF \(rs
.PD 0
.PP
.PD
	\(hyc ldlinux.sys \(hyc syslinux.cfg \(rs
.PD 0
.PP
.PD
	\(hyc linux \(hyc initrd.img \(rs
.PD 0
.PP
.PD
	image
.PD 0
.PP
.PD
.RE
.PP
and for a FreeDOS and loadlin image:
.PP
.RS 4
makebootfat \(hyo usb \(rs
.PD 0
.PP
.PD
	\(hyE 255 \(rs
.PD 0
.PP
.PD
	\(hyZ \(rs
.PD 0
.PP
.PD
	\(hy1 fat12com.bin \(hy2 fat16com.bin \(hy3 fat32chs.bin \(rs
.PD 0
.PP
.PD
	\(hym mbrfat.bin \(hyF \(rs
.PD 0
.PP
.PD
	\(hyc kernel.sys \(hyc command.com \(rs
.PD 0
.PP
.PD
	\(hyc autoexec.bat \(hyc loadlin.exe \(rs
.PD 0
.PP
.PD
	\(hyc linux \(hyc initrd.img \(rs
.PD 0
.PP
.PD
	image
.PD 0
.PP
.PD
.RE
.PP
Please note that FreeDos has some problems booting
from USB. It works only on very few conditions.
.SH EXCLUSION 
To exclude some files or directories in the image copy, you
can use the \(hyx option using the same path specification
which are you using for the image directory.
.PP
For example, if you need to exclude the \(oqisolinux\(cq and
\(oqsyslinux\(cq subdirectories from the \(oqimage\(cq directory
you can use the command:
.PP
.RS 4
makebootfat ... \(rs
.PD 0
.PP
.PD
	\(hyx image/isolinux \(rs
.PD 0
.PP
.PD
	\(hyx image/syslinux \(rs
.PD 0
.PP
.PD
	image
.PD 0
.PP
.PD
.RE
.SH COPYRIGHT 
This file is Copyright (C) 2004, 2005 Andrea Mazzoleni
.SH SEE ALSO 
syslinux(1), mkdosfs(1), dosfsck(1)
