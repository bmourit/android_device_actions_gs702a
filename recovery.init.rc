# Copyright (C) 2012 The Android Open Source Project
#
# IMPORTANT: Do not create world writable files or directories.
# This is a common source of Android security bugs.
#

on early-init
    start ueventd

    # create mountpoints
    mkdir /mnt 0775 root system

on init
    export PATH /sbin:/vendor/bin:/system/sbin:/system/bin:/system/xbin
    export LD_LIBRARY_PATH /vendor/lib:/system/lib
    export ANDROID_ROOT /system
    export ANDROID_ASSETS /system/app
    export ANDROID_DATA /data
    export EXTERNAL_STORAGE /mnt/sdcard
    export TFCARD_STORAGE /mnt/sd-ext
    
    symlink /system/etc /etc

    mkdir /mnt
    mkdir /mnt/sdcard
    mkdir /mnt/sd-ext
    mkdir /system
    mkdir /data
    mkdir /cache 0777 system cache
    mkdir /config 0500 root root
    mount /tmp /tmp tmpfs

    chown root shell /tmp
    chmod 0775 /tmp

	#usb
	write /sys/class/android_usb/android0/iSerial ${ro.serialno}
	
	# from init.gs702a.rc
on fs
    # insmod flash driver
    insmod /lib/modules/blk1drv.ko
    insmod /lib/modules/blk2drv.ko
    wait /dev/block/actc

    #mount ext4 /dev/block/actc /system wait noatime nodiratime nosuid nodev noauto_da_alloc
    mount ext4 /dev/block/actd /data wait noatime nodiratime nosuid nodev noauto_da_alloc
    mount ext4 /dev/block/acte /cache wait noatime nodiratime nosuid nodev noauto_da_alloc
    #mount vfat /dev/block/actb /misc wait noatime nodiratime umask=0022
    mount debugfs none /sys/kernel/debug

	# end from init.gs702a.rc

	# from init.modules.rc
on post-fs
    # pmic
    insmod /lib/modules/atc260x_core.ko
    insmod /lib/modules/atc260x_dcdc.ko
    insmod /lib/modules/atc260x_ldo.ko
    insmod /lib/modules/atc260x_onoff.ko
    insmod /lib/modules/atc260x_adckeypad.ko
    insmod /lib/modules/atc260x_switch_ldo.ko
    insmod /lib/modules/atc260x_pm.ko
    insmod /lib/modules/atc260x_power.ko
    insmod /lib/modules/leopard_cpufreq.ko
    insmod /lib/modules/atc260x_rtc.ko
	#    hwclock -s

    # usb
    insmod /lib/modules/dwc3.ko
    insmod /lib/modules/dwc3-actions.ko
    insmod /lib/modules/g_android.ko
    insmod /lib/modules/acts_hcd.ko
    insmod /lib/modules/monitor.ko

    # display
    insmod /lib/modules/atv5202_de.ko

    # mmc
    insmod /lib/modules/mmc_core.ko
    insmod /lib/modules/mmc_block.ko
    insmod /lib/modules/atv5202_mmc.ko

    #sndrv
    insmod /lib/modules/atc260x_audio.ko
    insmod /lib/modules/sndrv.ko

    #vde_drv
    insmod /lib/modules/vde_drv.ko

    #vce_drv
    insmod /lib/modules/vce_drv.ko

    #mknod /dev/galcore c 199 0
    #insmod /lib/modules/galcore.ko

	# end from init.modules.rc

	# from init.extra_modules.rc
	#    write /sys/class/leds/led_charger/brightness 0

    insmod /lib/modules/atv5202_backlight.ko
    insmod /lib/modules/atv5202_lcd.ko
    insmod /lib/modules/atv5202_fb.ko
    insmod /lib/modules/atv5202_vout.ko
    insmod /lib/modules/gl5202_tvout.ko
    insmod /lib/modules/gl5202_hdmi.ko

	# end from init.extra_modules.rc

on boot
   ifup lo
    hostname localhost
    domainname localdomain

    class_start default

service ueventd /sbin/ueventd
    critical

service console /system/bin/sh
    console
    user root
    
on property:ro.debuggable=1
    start console

service recovery /sbin/recovery
	user root

service adbd /sbin/adbd recovery
    disabled

# Always start adbd on userdebug and eng builds
on property:ro.debuggable=1
    write /sys/class/android_usb/android0/iManufacturer ${ro.product.manufacturer}
    write /sys/class/android_usb/android0/iProduct ${ro.product.model}
    write /sys/class/android_usb/android0/enable 0
    write /sys/class/android_usb/android0/idVendor 10d6
    write /sys/class/android_usb/android0/idProduct 0c01
    write /sys/class/android_usb/android0/functions adb
    write /sys/class/android_usb/android0/enable 1
    start adbd
#    setprop sys.usb.state adb
	
#on property:sys.usb.config=mass_storage,adb
#    write /sys/class/android_usb/android0/enable 0
#    write /sys/class/android_usb/android0/idVendor 10d6
#    write /sys/class/android_usb/android0/idProduct 0c02
#    write /sys/class/android_usb/android0/functions ${sys.usb.config}
#    write /sys/class/android_usb/android0/enable 1
#    start adbd
#    setprop sys.usb.state ${sys.usb.config}	

# Restart adbd so it can run as root
on property:service.adb.root=1
    write /sys/class/android_usb/android0/enable 0
    restart adbd
    write /sys/class/android_usb/android0/enable 1
